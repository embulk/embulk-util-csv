apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "signing"
apply plugin: "checkstyle"
apply plugin: "org.embulk.embulk-plugins"

repositories {
    mavenCentral()
}

group = rootProject.group
version = rootProject.version
description = "Parses CSV files read by other file input plugins."

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compileOnly "org.embulk:embulk-api:0.10.33"
    compileOnly "org.embulk:embulk-spi:0.10.33"

    compile "com.fasterxml.jackson.core:jackson-annotations:2.6.7"
    compile "com.fasterxml.jackson.core:jackson-core:2.6.7"
    compile "com.fasterxml.jackson.core:jackson-databind:2.6.7"
    compile "org.embulk:embulk-util-config:0.3.1"
    compile "org.embulk:embulk-util-file:0.1.3"
    compile "org.embulk:embulk-util-json:0.1.1"
    compile "org.embulk:embulk-util-text:0.1.1"
    compile "org.embulk:embulk-util-timestamp:0.2.1"

    testImplementation "junit:junit:4.13.2"
    testImplementation "org.embulk:embulk-api:0.10.33"
    testImplementation "org.embulk:embulk-spi:0.10.33"
    testImplementation "org.embulk:embulk-core:0.10.33"
    testImplementation "org.embulk:embulk-deps:0.10.33"
    testImplementation "org.embulk:embulk-junit4:0.10.33"
}

embulkPlugin {
    mainClass = "org.embulk.parser.csv.CsvParserPlugin"
    category = "parser"
    type = "csv"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = "UTF-8"
}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    from rootProject.file("LICENSE")
}

sourcesJar {
    from rootProject.file("LICENSE")
}

javadocJar {
    from rootProject.file("LICENSE")
}

publishing {
    publications {
         maven(MavenPublication) {
            afterEvaluate { project ->
                groupId = project.group
                artifactId = project.name
            }

            from components.java
             // javadocJar and sourcesJar are added by java.withJavadocJar() and java.withSourcesJar() above.
             // See: https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/JavaPluginExtension.html

            pom {  // https://central.sonatype.org/pages/requirements.html
                packaging "jar"

                afterEvaluate { project ->
                    name = project.name
                    description = project.description
                }
                url = "https://www.embulk.org/"

                licenses {
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        name = "Muga Nishizawa"
                        email = "muga.nishizawa@gmail.com"
                    }
                    developer {
                        name = "Sadayuki Furuhashi"
                        email = "frsyuki@gmail.com"
                    }
                    developer {
                        name = "Shinichi Ishimura"
                        email = "shiketaudonko41@gmail.com"
                    }
                    developer {
                        name = "Naotoshi Seo"
                        email = "sonots@gmail.com"
                    }
                    developer {
                        name = "Dai MIKURUBE"
                        email = "dmikurube@treasure-data.com"
                    }
                    developer {
                        name = "Satoshi Akama"
                        email = "satoshiakama@gmail.com"
                    }
                    developer {
                        name = "Roman Shtykh"
                        email = "rshtykh@yahoo.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/embulk/embulk-standards.git"
                    developerConnection = "scm:git:git@github.com:embulk/embulk-standards.git"
                    url = "https://github.com/embulk/embulk-standards"
                }
            }
        }
    }

    repositories {
        maven {  // publishMavenPublicationToMavenCentralRepository
            name = "mavenCentral"
            if (project.version.endsWith("-SNAPSHOT")) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }

            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : ""
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : ""
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

test {
    maxHeapSize = "1536m"
    forkEvery = 1  // test processes are forked by each test class (default is 0)
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

tasks.withType(Checkstyle) {
    reports {
        // Not to skip up-to-date checkstyles.
        outputs.upToDateWhen { false }
    }
}

checkstyle {
    toolVersion "8.7"
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
    configProperties = [
        "checkstyle.config.path": file("${projectDir}/config/checkstyle")
    ]
    ignoreFailures = false
    maxWarnings = 0  // https://github.com/gradle/gradle/issues/881
}
